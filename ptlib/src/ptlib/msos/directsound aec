This is the function I am using to create full-duplex directsound buffers. It just returns the DIRECTSOUNDBUFFER and DIRECTSOUNDCAPTUREBUFFER. Playback and recording is done like with regular playback and capture buffers.
 
Henrik
 

void
CAudioIODeviceDS::CreateDSFullDuplex(
LPWAVEFORMATEX pWaveFormat,
LPGUID pRenderDeviceGuid,
LPGUID pCaptureDeviceGuid,
LPDIRECTSOUNDFULLDUPLEX* lppdsfd,
LPDIRECTSOUNDBUFFER8* lppdsb,
LPDIRECTSOUNDCAPTUREBUFFER8* lppdscb )
{
     DWORD dwPlaybackBufferLength = 640 * pWaveFormat->nAvgBytesPerSec / 1000;     // 640ms(40ms) playback buffer (divided by 16)
     DWORD dwCaptureBufferLength = 40 * pWaveFormat->nAvgBytesPerSec / 1000;     // 40ms capture buffer
     if( m_dwPreferredCaptureBufferSize == 0 )
          dwCaptureBufferLength = m_dwPreferredCaptureBufferSize;
 
     // render buffer
     DSBUFFERDESC dsbdesc;
     ZeroMemory( &dsbdesc, sizeof( DSBUFFERDESC ) );
     dsbdesc.dwSize = sizeof(DSBUFFERDESC);
     dsbdesc.dwFlags =
               DSBCAPS_GETCURRENTPOSITION2          // Always a good idea
               | DSBCAPS_GLOBALFOCUS               // Allows background playing
               | DSBCAPS_CTRLPOSITIONNOTIFY     // Needed for notification
               | DSBCAPS_LOCSOFTWARE               // Our buffer is too small for hardware mixing
               | DSBCAPS_CTRLFREQUENCY;
     dsbdesc.dwBufferBytes = dwPlaybackBufferLength;
     dsbdesc.lpwfxFormat = pWaveFormat;
 
     // capture buffer
     DSCEFFECTDESC dscfx[1];
     ZeroMemory( &dscfx[0], sizeof( DSCEFFECTDESC ) );
     dscfx[0].dwSize                    = sizeof( DSCEFFECTDESC );
     dscfx[0].dwFlags               = DSCFX_LOCSOFTWARE ;
     dscfx[0].guidDSCFXClass          = GUID_DSCFX_CLASS_AEC;
     dscfx[0].guidDSCFXInstance     = GUID_DSCFX_MS_AEC;
     dscfx[0].dwReserved1          = 0;
     dscfx[0].dwReserved2          = 0;
     /*
     ZeroMemory( &dscfx[1], sizeof( DSCEFFECTDESC ) );
     dscfx[1].dwSize                    = sizeof( DSCEFFECTDESC );
     dscfx[1].dwFlags               = DSCFX_LOCSOFTWARE ;
     dscfx[1].guidDSCFXClass          = GUID_DSCFX_CLASS_NS;
     dscfx[1].guidDSCFXInstance     = GUID_DSCFX_MS_NS;
     dscfx[1].dwReserved1          = 0;
     dscfx[1].dwReserved2          = 0;
     */
 
     DSCBUFFERDESC dscbdesc;
     ZeroMemory( &dscbdesc, sizeof( DSCBUFFERDESC ) );
     dscbdesc.dwSize               = sizeof(DSCBUFFERDESC);
     dscbdesc.dwFlags          = DSCBCAPS_CTRLFX;
     dscbdesc.dwBufferBytes     = dwCaptureBufferLength * 2;
     dscbdesc.dwReserved          = 0;
     dscbdesc.lpwfxFormat     = pWaveFormat;
     dscbdesc.dwFXCount          = 1;
     dscbdesc.lpDSCFXDesc     = dscfx;
 
     HWND hWnd = GetForegroundWindow();
     if (hWnd == NULL)
          hWnd = GetDesktopWindow();
 
     // try full feature-set
     if( DirectSoundFullDuplexCreate8(     pRenderDeviceGuid,
                                                  pCaptureDeviceGuid,
                                                  &dscbdesc,
                                                  &dsbdesc,
                                                  hWnd,
                                                  DSSCL_PRIORITY,
                                                  lppdsfd,
                                                  lppdscb,
                                                  lppdsb,
                                                  NULL ) != DS_OK )
     {
          // try removing AEC
          dscbdesc.dwFlags          = 0;
          dscbdesc.dwFXCount          = 0;
          dscbdesc.lpDSCFXDesc     = NULL;
          if( DirectSoundFullDuplexCreate8(     pRenderDeviceGuid,
                                                       pCaptureDeviceGuid,
                                                       &dscbdesc,
                                                       &dsbdesc,
                                                       hWnd,
                                                       DSSCL_PRIORITY,
                                                       lppdsfd,
                                                       lppdscb,
                                                       lppdsb,
                                                       NULL ) != DS_OK )
          {
               // remove frequency control
               dsbdesc.dwFlags &= ~DSBCAPS_CTRLFREQUENCY;
               DIRECTSOUND_ThrowIfError( DirectSoundFullDuplexCreate8(     pRenderDeviceGuid,
                                                       pCaptureDeviceGuid,
                                                       &dscbdesc,
                                                       &dsbdesc,
                                                       hWnd,
                                                       DSSCL_PRIORITY,
                                                       lppdsfd,
                                                       lppdscb,
                                                       lppdsb,
                                                       NULL ) );
 
               TRACE( "DirectSound full-duplex: AEC [NO], CtrlFreq [NO]\n" );
          }
          else
          {
               TRACE( "DirectSound full-duplex: AEC [NO], CtrlFreq [yes]\n" );
          }
     }
     else
     {
          TRACE( "DirectSound full-duplex: AEC [yes], CtrlFreq [yes]\n" );
     }
}